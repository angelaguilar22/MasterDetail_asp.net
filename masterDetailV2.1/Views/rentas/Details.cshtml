@model masterDetailV2._1.Models.rentas

@{
    ViewBag.Title = "Detalles de rentas";
}


<!-- INICIO DE SECCION DE SCRIPTS -->
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery.validate.min.js"></script>


<!-- INICIO DE LINKS Y SCRIPTS DE SWAL ALERT-->
<link href="~/Content/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/sweetalert.min.js" type="text/javascript"></script>



<div>
    <div class="col-md-12" style="margin-bottom: 3%">
        <h2>Detalles de renta</h2>
    </div>

    <hr />

    <div class="">
        <div class="col-md-4" style="margin-bottom: 15px">
            <label class="control-label">Folio de renta</label>
            @Html.EditorFor(model => model.folio, new { htmlAttributes = new { @id = "rentaFolio", @class = "form-control", @placeholder = "Folio de renta", @ReadOnly = "true" } })
            @Html.ValidationMessageFor(model => model.folio, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-4" style="margin-bottom: 15px">
            <label class="control-label">Fecha de renta</label>
            @Html.TextBoxFor(model => model.fechaRenta, "{0:yyyy-MM-dd}", new { @id = "rentaFechaRenta", @class = "form-control", @placeholder = "Fecha de renta", @ReadOnly = "true",@type = "date" } )
            @Html.ValidationMessageFor(model => model.fechaRenta, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-4" style="margin-bottom: 15px">
            <label class="control-label">Fecha de vencimineto</label>
            @Html.TextBoxFor(model => model.fechaVence, "{0:yyyy-MM-dd}", new { @id = "rentaFechaVence", @class = "form-control", @placeholder = "Fecha de vencimiento", @ReadOnly = "true" } )
            @Html.ValidationMessageFor(model => model.fechaVence, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="">
        <div class="col-md-4">
            <label class="control-label">Monto renta</label>
            @Html.EditorFor(model => model.total, new { htmlAttributes = new { @id = "rentaMontoTotal", @class = "form-control", @ReadOnly = "true", @placeholder = "Monto renta" } })
            @Html.ValidationMessageFor(model => model.total, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-4">
            <label class="control-label">Cantidad total productos</label>
            @Html.EditorFor(model => model.cantidadTotalProd, new { htmlAttributes = new { @id = "rentaProductosTotales", @class = "form-control", @ReadOnly = "true", @placeholder = "Productos totales" } })
            @Html.ValidationMessageFor(model => model.cantidadTotalProd, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-4">
            <label class="control-label">Subtotal</label>
            @Html.EditorFor(model => model.subtotal, new { htmlAttributes = new { @id = "rentaSubtotal", @class = "form-control", @ReadOnly = "true", @placeholder = "Subtotal" } })
            @Html.ValidationMessageFor(model => model.subtotal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-12" style="margin-top: 20px; padding-left: 15px; padding-right: 15px;">

        <table class="table table-striped" style="margin-top: 20px">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Marca</th>
                    <th>Numero de Serie</th>
                    <th>Estado Fisico</th>
                    <th>Precio Unitario</th>
                    <th>Cantidad</th>
                    <th>Unidad de Medida</th>
                    <th>Categoria</th>
                    <th>Entregado</th>
                    <th>Acciones</th>
                </tr>

            </thead>
            <tbody id="produtosList">
                <!--     inicio de seccion de listado de PRODUCTOS -->
                <tr id="loadingStatus"></tr>
            </tbody>
        </table>
    </div>

    <div class="col-md-12" style="margin-top: 10%; margin-bottom: 15px" >
        @Html.ActionLink("Regresar al listado", "Index")
    </div>

</div>




<script type="text/javascript">
    // Funcion ejecutada cuando esta listo el HTML
    $(document).ready(function () {
        let idRenta = '@ViewBag.idRenta';

        // Cargar informacion del Detalle de la renta
        cargarGrid(idRenta);

        // Funcion para cargar informacion a la GRID
        function cargarGrid(idRenta) {
            let listadoProductos = [];

            $.ajax({
                url: 'http://localhost:50131/rentas/getDetallesRecepcion?idRenta=' + idRenta,
                success: function (respuesta) {
                    console.log(respuesta);
                    // Cargamos los elementos a el listado de productos
                    listadoProductos = respuesta;


                    // Lmpeamos la GRID
                    $("#produtosList").html('');

                    // Objeto a enviar listado de Productos
                    var SetData = $("#produtosList");

                    // Generamosla GRID dinamicamente
                    listadoProductos.forEach(producto => {
                        var Data = "";
                        if (producto.entregado == 1) {
                            // Generamos el elemento html a agregar a la GRID
                            Data = "<tr class='row_" + producto.id + "'>" +
                            "<td>" + producto.nombre + "</td>" +
                            "<td>" + producto.descripcion + "</td>" +
                            "<td>" + producto.marca + "</td>" +
                            "<td>" + producto.numeroSerie + "</td>" +
                            "<td>" + producto.estadoFisico + "</td>" +
                            "<td>" + producto.precioUnitario + "</td>" +
                            "<td>" + producto.cantidad + "</td>" +
                            "<td>" + producto.unidadMedida + "</td>" +
                            "<td>" + producto.categoria + "</td>" +
                            "<td>" + producto.entregado + "</td>" +
                            "<td>" + "</td>" +
                            "</tr>";
                        } else {
                            // Generamos el elemento html a agregar a la GRID
                             Data = "<tr class='row_" + producto.id + "'>" +
                            "<td>" + producto.nombre + "</td>" +
                            "<td>" + producto.descripcion + "</td>" +
                            "<td>" + producto.marca + "</td>" +
                            "<td>" + producto.numeroSerie + "</td>" +
                            "<td>" + producto.estadoFisico + "</td>" +
                            "<td>" + producto.precioUnitario + "</td>" +
                            "<td>" + producto.cantidad + "</td>" +
                            "<td>" + producto.unidadMedida + "</td>" +
                            "<td>" + producto.categoria + "</td>" +
                            "<td>" + producto.entregado + "</td>" +
                            "<td>" + "<a href='#' class='btn btn-primary' onclick='recibirProducto(" + producto.id +"," +idRenta + ")' >Recibir</a>" + "</td>" +
                            "</tr>";
                        }

                        // Cuerpo de la GRID
                        SetData.append(Data);
                    });
                },
                error: function () {
                    console.log("No se ha podido obtener la información");
                }
            });

        }

        
    });

    // Funcion para cambiar el estatus del detalle en el caso de recibir el producto rentad
    function recibirProducto(id, idRenta) {
        console.log(id, idRenta, 'id del detalle de la renta');

        let detalleRenta = {
            idDetalleRenta: id,
            entregado: 1
        }

        console.log(detalleRenta);

        swal({
            title: "Estas seguro de recibir el producto?",
            text: "El producto se recepcionara actualizara el estatus de entregado",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Sí",
            cancelButtonText: "No",
            closeOnConfirm: false,
            closeOnCancel: false
        },
            function (isConfirm) {
                if (isConfirm) {
                    // Petion a backend para agregar la Recepcion a base de datos
                    $.ajax({
                        type: "POST",
                        url: "http://localhost:50131/rentas/actualizarDetalle",
                        data: detalleRenta,
                        //dataType: 'application/json',
                        success: function (response) {

                            // Mensaje de eliminado correctamneter
                            swal("Actualizado Correctamente", "", "success");

                            setTimeout(() => {
                                console.log(response, 'Success');
                                // Redireccionamos la pagina a el index
                                window.location = "http://localhost:50131/rentas/Details/" + idRenta;
                            }, 1500);
                        },
                        error: function (error) {
                            console.log('Algo salio mal camarita al guardar la renta', error);
                        }
                    });
                  
                } else {
                    swal("Cancelado", "", "error");
                }
            });

        

    }


</script>

